// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'data/local_datastore/entities/entity_author.dart';
import 'data/local_datastore/entities/entity_tag.dart';
import 'data/local_datastore/entities/entity_yojna.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4577661289402511268),
      name: 'AuthorEntity',
      lastPropertyId: const obx_int.IdUid(7, 5387730876651114006),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7399813272846289554),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 938769924189506050),
            name: 'id',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3516967791734906826),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7391110198550816852),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8831783470629908817),
            name: 'created',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7152554142329696747),
            name: 'updated',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5387730876651114006),
            name: 'picture',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 4545096026662797620),
      name: 'TagEntity',
      lastPropertyId: const obx_int.IdUid(9, 1586953685601173075),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4189957311306911388),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3918567851784444345),
            name: 'id',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5455366546891733629),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8152502731593021328),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6188655464063125828),
            name: 'lowerLimit',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4225331317816910525),
            name: 'upperLimit',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5484792596356462246),
            name: 'values',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7803460639081560290),
            name: 'created',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 1586953685601173075),
            name: 'updated',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 2783612592300339403),
      name: 'YojnaEntity',
      lastPropertyId: const obx_int.IdUid(7, 3339349667027929452),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1369411662909207183),
            name: 'objectBoxId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1876568426039296384),
            name: 'id',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5025041437993447974),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8292026407588600115),
            name: 'content',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8355882287784041441),
            name: 'created',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3845206290575736982),
            name: 'updated',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3339349667027929452),
            name: 'art',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 6528481031404950251),
            name: 'tags',
            targetId: const obx_int.IdUid(2, 4545096026662797620)),
        obx_int.ModelRelation(
            id: const obx_int.IdUid(2, 430383899509204754),
            name: 'authors',
            targetId: const obx_int.IdUid(1, 4577661289402511268))
      ],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(3, 2783612592300339403),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(2, 430383899509204754),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AuthorEntity: obx_int.EntityDefinition<AuthorEntity>(
        model: _entities[0],
        toOneRelations: (AuthorEntity object) => [],
        toManyRelations: (AuthorEntity object) => {},
        getId: (AuthorEntity object) => object.objectBoxId,
        setId: (AuthorEntity object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (AuthorEntity object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final pictureOffset =
              object.picture == null ? null : fbb.writeString(object.picture!);
          fbb.startTable(8);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, emailOffset);
          fbb.addInt64(4, object.created.millisecondsSinceEpoch);
          fbb.addInt64(5, object.updated.millisecondsSinceEpoch);
          fbb.addOffset(6, pictureOffset);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final pictureParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final createdParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final updatedParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0));
          final object = AuthorEntity(
              id: idParam,
              name: nameParam,
              email: emailParam,
              picture: pictureParam,
              created: createdParam,
              updated: updatedParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    TagEntity: obx_int.EntityDefinition<TagEntity>(
        model: _entities[1],
        toOneRelations: (TagEntity object) => [],
        toManyRelations: (TagEntity object) => {},
        getId: (TagEntity object) => object.objectBoxId,
        setId: (TagEntity object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (TagEntity object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final nameOffset = fbb.writeString(object.name);
          final typeOffset = fbb.writeString(object.type);
          final valuesOffset = fbb.writeList(
              object.values.map(fbb.writeString).toList(growable: false));
          fbb.startTable(10);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, typeOffset);
          fbb.addInt64(4, object.lowerLimit);
          fbb.addInt64(5, object.upperLimit);
          fbb.addOffset(6, valuesOffset);
          fbb.addInt64(7, object.created.millisecondsSinceEpoch);
          fbb.addInt64(8, object.updated.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final lowerLimitParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final upperLimitParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final valuesParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 16, []);
          final createdParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0));
          final updatedParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0));
          final object = TagEntity(
              id: idParam,
              name: nameParam,
              type: typeParam,
              lowerLimit: lowerLimitParam,
              upperLimit: upperLimitParam,
              values: valuesParam,
              created: createdParam,
              updated: updatedParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    YojnaEntity: obx_int.EntityDefinition<YojnaEntity>(
        model: _entities[2],
        toOneRelations: (YojnaEntity object) => [],
        toManyRelations: (YojnaEntity object) => {
              obx_int.RelInfo<YojnaEntity>.toMany(1, object.objectBoxId):
                  object.tags,
              obx_int.RelInfo<YojnaEntity>.toMany(2, object.objectBoxId):
                  object.authors
            },
        getId: (YojnaEntity object) => object.objectBoxId,
        setId: (YojnaEntity object, int id) {
          object.objectBoxId = id;
        },
        objectToFB: (YojnaEntity object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final titleOffset = fbb.writeString(object.title);
          final contentOffset = fbb.writeString(object.content);
          final artOffset =
              object.art == null ? null : fbb.writeString(object.art!);
          fbb.startTable(8);
          fbb.addInt64(0, object.objectBoxId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, titleOffset);
          fbb.addOffset(3, contentOffset);
          fbb.addInt64(4, object.created.millisecondsSinceEpoch);
          fbb.addInt64(5, object.updated.millisecondsSinceEpoch);
          fbb.addOffset(6, artOffset);
          fbb.finish(fbb.endTable());
          return object.objectBoxId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final titleParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final contentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final updatedParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0));
          final createdParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final artParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final object = YojnaEntity(
              id: idParam,
              title: titleParam,
              content: contentParam,
              updated: updatedParam,
              created: createdParam,
              art: artParam)
            ..objectBoxId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          obx_int.InternalToManyAccess.setRelInfo<YojnaEntity>(
              object.tags,
              store,
              obx_int.RelInfo<YojnaEntity>.toMany(1, object.objectBoxId));
          obx_int.InternalToManyAccess.setRelInfo<YojnaEntity>(
              object.authors,
              store,
              obx_int.RelInfo<YojnaEntity>.toMany(2, object.objectBoxId));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AuthorEntity] entity fields to define ObjectBox queries.
class AuthorEntity_ {
  /// See [AuthorEntity.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<AuthorEntity>(_entities[0].properties[0]);

  /// See [AuthorEntity.id].
  static final id =
      obx.QueryStringProperty<AuthorEntity>(_entities[0].properties[1]);

  /// See [AuthorEntity.name].
  static final name =
      obx.QueryStringProperty<AuthorEntity>(_entities[0].properties[2]);

  /// See [AuthorEntity.email].
  static final email =
      obx.QueryStringProperty<AuthorEntity>(_entities[0].properties[3]);

  /// See [AuthorEntity.created].
  static final created =
      obx.QueryDateProperty<AuthorEntity>(_entities[0].properties[4]);

  /// See [AuthorEntity.updated].
  static final updated =
      obx.QueryDateProperty<AuthorEntity>(_entities[0].properties[5]);

  /// See [AuthorEntity.picture].
  static final picture =
      obx.QueryStringProperty<AuthorEntity>(_entities[0].properties[6]);
}

/// [TagEntity] entity fields to define ObjectBox queries.
class TagEntity_ {
  /// See [TagEntity.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<TagEntity>(_entities[1].properties[0]);

  /// See [TagEntity.id].
  static final id =
      obx.QueryStringProperty<TagEntity>(_entities[1].properties[1]);

  /// See [TagEntity.name].
  static final name =
      obx.QueryStringProperty<TagEntity>(_entities[1].properties[2]);

  /// See [TagEntity.type].
  static final type =
      obx.QueryStringProperty<TagEntity>(_entities[1].properties[3]);

  /// See [TagEntity.lowerLimit].
  static final lowerLimit =
      obx.QueryIntegerProperty<TagEntity>(_entities[1].properties[4]);

  /// See [TagEntity.upperLimit].
  static final upperLimit =
      obx.QueryIntegerProperty<TagEntity>(_entities[1].properties[5]);

  /// See [TagEntity.values].
  static final values =
      obx.QueryStringVectorProperty<TagEntity>(_entities[1].properties[6]);

  /// See [TagEntity.created].
  static final created =
      obx.QueryDateProperty<TagEntity>(_entities[1].properties[7]);

  /// See [TagEntity.updated].
  static final updated =
      obx.QueryDateProperty<TagEntity>(_entities[1].properties[8]);
}

/// [YojnaEntity] entity fields to define ObjectBox queries.
class YojnaEntity_ {
  /// See [YojnaEntity.objectBoxId].
  static final objectBoxId =
      obx.QueryIntegerProperty<YojnaEntity>(_entities[2].properties[0]);

  /// See [YojnaEntity.id].
  static final id =
      obx.QueryStringProperty<YojnaEntity>(_entities[2].properties[1]);

  /// See [YojnaEntity.title].
  static final title =
      obx.QueryStringProperty<YojnaEntity>(_entities[2].properties[2]);

  /// See [YojnaEntity.content].
  static final content =
      obx.QueryStringProperty<YojnaEntity>(_entities[2].properties[3]);

  /// See [YojnaEntity.created].
  static final created =
      obx.QueryDateProperty<YojnaEntity>(_entities[2].properties[4]);

  /// See [YojnaEntity.updated].
  static final updated =
      obx.QueryDateProperty<YojnaEntity>(_entities[2].properties[5]);

  /// See [YojnaEntity.art].
  static final art =
      obx.QueryStringProperty<YojnaEntity>(_entities[2].properties[6]);

  /// see [YojnaEntity.tags]
  static final tags = obx.QueryRelationToMany<YojnaEntity, TagEntity>(
      _entities[2].relations[0]);

  /// see [YojnaEntity.authors]
  static final authors = obx.QueryRelationToMany<YojnaEntity, AuthorEntity>(
      _entities[2].relations[1]);
}
